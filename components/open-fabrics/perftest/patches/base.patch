Only in perftest-1.3.0: .base.patched
Only in perftest-1.3.0: .patched
Only in perftest-1.3.0: .prep
Only in perftest-1.3.0: .unpacked
Only in perftest-1.3.0: configure
diff -r -u /tmp/perftest-1.3.0/get_clock.c perftest-1.3.0/get_clock.c
--- /tmp/perftest-1.3.0/get_clock.c	2010-12-19 23:36:26.000000000 +0900
+++ perftest-1.3.0/get_clock.c	2012-02-02 11:12:10.121956486 +0900
@@ -45,6 +45,9 @@
 #include <unistd.h>
 #include <stdio.h>
 #include "get_clock.h"
+#if defined(__SVR4) && defined(__sun)
+#include <infiniband/ofa_solaris.h>
+#endif
 
 #ifndef DEBUG
 #define DEBUG 0
@@ -137,7 +140,11 @@
 	FILE* f;
 	char buf[256];
 	double mhz = 0.0;
+#if defined(__SVR4) && defined(__sun)
+	sol_cpu_info_t	info;
+#endif
 
+#if !(defined(__SVR4) && defined(__sun))
 	f = fopen("/proc/cpuinfo","r");
 	if (!f)
 		return 0.0;
@@ -174,6 +181,12 @@
 		}
 	}
 	fclose(f);
+#else
+	if (!sol_get_cpu_info(&info))
+		mhz = info.cpu_mhz;
+	else
+		return (0.0);
+#endif
 	return mhz;
 }
 
@@ -184,9 +197,6 @@
 	sample = sample_get_cpu_mhz();
 	proc = proc_get_cpu_mhz(no_cpu_freq_fail);
 
-	if (!proc || !sample)
-		return 0;
-
 	delta = proc > sample ? proc - sample : sample - proc;
 	if (delta / proc > 0.01) {
 			fprintf(stderr, "Warning: measured timestamp frequency "
diff -r -u /tmp/perftest-1.3.0/get_clock.h perftest-1.3.0/get_clock.h
--- /tmp/perftest-1.3.0/get_clock.h	2009-11-01 20:09:16.000000000 +0900
+++ perftest-1.3.0/get_clock.h	2012-02-02 11:12:10.122607908 +0900
@@ -71,6 +71,23 @@
 	return ret;
 }
 
+#elif defined(__sparc)
+#include <sys/times.h>
+#include <limits.h>
+typedef long	cycles_t;
+
+static inline cycles_t get_cycles()
+{
+	struct timespec tp;
+	long   time;
+
+	if (clock_gettime(CLOCK_HIGHRES, &tp))
+		return -1;
+
+	time = (tp.tv_sec * 1000000) + (tp.tv_nsec / 1000);
+	return time;
+}
+
 #else
 #warning get_cycles not implemented for this architecture: attempt asm/timex.h
 #include <asm/timex.h>
diff -r -u /tmp/perftest-1.3.0/Makefile perftest-1.3.0/Makefile
--- /tmp/perftest-1.3.0/Makefile	2011-11-24 05:13:32.000000000 +0900
+++ perftest-1.3.0/Makefile	2012-02-02 11:12:10.123084258 +0900
@@ -2,6 +2,7 @@
 MCAST_TESTS = send_bw send_lat
 TESTS = write_bw_postlist write_lat write_bw read_lat read_bw atomic_lat atomic_bw
 UTILS = clock_test
+BINS = ib_write_bw_postlist rdma_lat rdma_bw ib_send_lat ib_send_bw ib_write_lat ib_write_bw ib_read_lat ib_read_bw ib_clock_test
 
 all: ${RDMACM_TESTS} ${MCAST_TESTS} ${TESTS} ${UTILS}
 
@@ -12,8 +13,9 @@
 BASIC_HEADERS = get_clock.h
 EXTRA_HEADERS = perftest_resources.h perftest_communication.h perftest_parameters.h
 MCAST_HEADERS = multicast_resources.h
+CC=gcc
 #The following seems to help GNU make on some platforms
-LOADLIBES += -libverbs -lrdmacm
+LOADLIBES += -libverbs -lrdmacm -lrt
 LDFLAGS +=
 
 ${MCAST_TESTS}: LOADLIBES += -libumad -lm
@@ -25,6 +27,10 @@
 ${TESTS} ${UTILS}: %: %.c ${BASIC_FILES} ${EXTRA_FILES} ${BASIC_HEADERS} ${EXTRA_HEADERS}
 	$(CC) $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) $< ${BASIC_FILES} ${EXTRA_FILES} $(LOADLIBES) $(LDLIBS) -o ib_$@
 
+install: all
+	$(INSTALL) -d $(DESTDIR)$(BINDIR)
+	$(INSTALL) -m 755 -s $(BINS) $(DESTDIR)$(BINDIR)
+
 clean:
 	$(foreach fname,${RDMACM_TESTS}, rm -f ${fname})
 	$(foreach fname,${MCAST_TESTS}, rm -f ib_${fname})
diff -r -u /tmp/perftest-1.3.0/multicast_resources.c perftest-1.3.0/multicast_resources.c
--- /tmp/perftest-1.3.0/multicast_resources.c	2011-10-26 20:44:25.000000000 +0900
+++ perftest-1.3.0/multicast_resources.c	2012-02-02 11:12:10.123616481 +0900
@@ -4,7 +4,9 @@
 #include <unistd.h>
 #include <string.h>
 #include <limits.h>
+#if !(defined(__SVR4) && defined(__sun))
 #include <byteswap.h>
+#endif
 #include <arpa/inet.h>
 #include <sys/types.h>
 #include <sys/socket.h>
diff -r -u /tmp/perftest-1.3.0/perftest_communication.c perftest-1.3.0/perftest_communication.c
--- /tmp/perftest-1.3.0/perftest_communication.c	2012-01-03 18:44:41.000000000 +0900
+++ perftest-1.3.0/perftest_communication.c	2012-02-02 11:14:41.891558792 +0900
@@ -11,7 +11,9 @@
 #include <sys/socket.h>
 #include <netdb.h>
 #include <errno.h>
+#if !(defined(__SVR4) && defined(__sun))
 #include <byteswap.h>
+#endif
 #include "perftest_communication.h"
 
 /****************************************************************************** 
diff -r -u /tmp/perftest-1.3.0/perftest_communication.h perftest-1.3.0/perftest_communication.h
--- /tmp/perftest-1.3.0/perftest_communication.h	2011-10-26 20:44:25.000000000 +0900
+++ perftest-1.3.0/perftest_communication.h	2012-02-02 11:12:10.124152693 +0900
@@ -48,10 +48,10 @@
 #define SYNC_SPEC_ID	 (5)
 
 // The Format of the message we pass through sockets , without passing Gid.
-#define KEY_PRINT_FMT "%04x:%04x:%06x:%06x:%08x:%016Lx"
+#define KEY_PRINT_FMT "%04x:%04x:%06x:%06x:%08x:%016llx"
 
 // The Format of the message we pass through sockets (With Gid).
-#define KEY_PRINT_FMT_GID "%04x:%04x:%06x:%06x:%08x:%016Lx:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x"
+#define KEY_PRINT_FMT_GID "%04x:%04x:%06x:%06x:%08x:%016llx:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x"
 
 // The Basic print format for all verbs.
 #define BASIC_ADDR_FMT " %s address: LID %#04x QPN %#06x PSN %#06x"
@@ -60,7 +60,7 @@
 #define READ_FMT       " OUT %#04x"
 
 // The print format of the pingpong_dest element for RDMA verbs.
-#define RDMA_FMT       " RKey %#08x VAddr %#016Lx"
+#define RDMA_FMT       " RKey %#08x VAddr %#016llx"
 
 // The print format of a global address or a multicast address.
 #define PERF_GID_FMT " %s: %02d:%02d:%02d:%02d:%02d:%02d:%02d:%02d:%02d:%02d:%02d:%02d:%02d:%02d:%02d:%02d\n"
diff -r -u /tmp/perftest-1.3.0/perftest_parameters.c perftest-1.3.0/perftest_parameters.c
--- /tmp/perftest-1.3.0/perftest_parameters.c	2012-01-04 22:13:11.000000000 +0900
+++ perftest-1.3.0/perftest_parameters.c	2012-02-02 11:12:10.124978565 +0900
@@ -334,10 +334,24 @@
 	ibv_query_port(context,ib_port,&port_attr);
 
 	// User did not ask for specific mtu.
-	if (user_mtu == 0) 
-		curr_mtu = port_attr.active_mtu;
+	if (user_mtu == 0) { 
+#if !(defined(__SVR4) && defined(__sun))
+  		curr_mtu = port_attr.active_mtu;
+#else
+		struct ibv_device_attr device_attr;
+  
+		if (ibv_query_device(context, &device_attr)) {
+                        fprintf(stderr, "Failed to query device props");
+			curr_mtu = port_attr.active_mtu;
+                }
 
-	else {
+		if (device_attr.vendor_part_id == 23108) {
+			curr_mtu = IBV_MTU_1024;
+		} else {
+			curr_mtu = IBV_MTU_2048;
+		}
+#endif
+	} else {
 
 		switch (user_mtu) {
 
diff -r -u /tmp/perftest-1.3.0/perftest_parameters.h perftest-1.3.0/perftest_parameters.h
--- /tmp/perftest-1.3.0/perftest_parameters.h	2012-01-03 22:32:15.000000000 +0900
+++ perftest-1.3.0/perftest_parameters.h	2012-02-02 11:12:10.125550985 +0900
@@ -87,7 +87,11 @@
 #define DEF_GID_INDEX (-1)
 #define DEF_NUM_QPS   (1)
 #define DEF_INLINE_BW (0)
+#if defined(__SVR4) && defined(__sun)
+#define DEF_INLINE_LT (372)
+#else
 #define DEF_INLINE_LT (400)
+#endif
 #define DEF_RX_RDMA   (1)
 #define DEF_RX_SEND   (600)
 #define DEF_CQ_MOD    (50)
@@ -107,7 +111,11 @@
 #define MIN_QP_NUM    (1)
 #define MAX_QP_NUM    (8)
 #define MIN_INLINE    (0)
-#define MAX_INLINE    (400)
+#if defined(__SVR4) && defined(__sun)
+#define MAX_INLINE 	  (372)
+#else
+#define MAX_INLINE 	  (400)
+#endif
 #define MIN_QP_MCAST  (1)
 #define MAX_QP_MCAST  (56)
 #define MIN_RX	      (1)
@@ -124,10 +132,10 @@
 #define RESULT_FMT_LAT " #bytes #iterations    t_min[usec]    t_max[usec]  t_typical[usec]\n"
 
 // Result print format
-#define REPORT_FMT     " %-7lu    %d           %-7.2f            %-7.2f\n"
+#define REPORT_FMT     " %-7"PRIu64"    %d           %-7.2f            %-7.2f\n"
 
 // Result print format for latency tests.
-#define REPORT_FMT_LAT " %-7lu %d          %-7.2f        %-7.2f      %-7.2f\n"
+#define REPORT_FMT_LAT " %-7"PRIu64" %d          %-7.2f        %-7.2f      %-7.2f\n"
 
 #define CHECK_VALUE(arg,minv,maxv,name) 						    					\
 	{ arg = strtol(optarg, NULL, 0); if ((arg < minv) || (arg > maxv))                  \
diff -r -u /tmp/perftest-1.3.0/perftest_resources.h perftest-1.3.0/perftest_resources.h
--- /tmp/perftest-1.3.0/perftest_resources.h	2012-01-04 21:54:26.000000000 +0900
+++ perftest-1.3.0/perftest_resources.h	2012-02-02 11:12:10.126145050 +0900
@@ -63,7 +63,9 @@
 #include <sys/types.h>
 #include <sys/socket.h>
 #include <netdb.h>
+#if !(defined(__SVR4) && defined(__sun))
 #include <byteswap.h>
+#endif
 
 #define CYCLE_BUFFER        (4096)
 #define CACHE_LINE_SIZE     (64)
diff -r -u /tmp/perftest-1.3.0/rdma_bw.c perftest-1.3.0/rdma_bw.c
--- /tmp/perftest-1.3.0/rdma_bw.c	2011-10-26 20:44:26.000000000 +0900
+++ perftest-1.3.0/rdma_bw.c	2012-02-02 11:12:10.128023146 +0900
@@ -50,8 +50,11 @@
 #include <malloc.h>
 #include <getopt.h>
 #include <arpa/inet.h>
+#if !(defined(__SVR4) && defined(__sun))
 #include <byteswap.h>
+#endif
 #include <time.h>
+#include <inttypes.h>
 
 #include <infiniband/verbs.h>
 #include <rdma/rdma_cma.h>
@@ -145,7 +148,7 @@
 
 	if (n < 0) {
 		fprintf(stderr, "%d:%s: %s for %s:%d\n", 
-				pid, __func__, gai_strerror(n),
+				(int)pid, __func__, gai_strerror(n),
 				data->servername, data->port);
 		goto err4;
 	}
@@ -158,7 +161,7 @@
 		if (rdma_resolve_addr(data->cm_id, NULL,
 					 (struct sockaddr *)&sin, 2000)) {
 			fprintf(stderr, "%d:%s: rdma_resolve_addr failed\n",
-					 pid, __func__ );
+					 (int)pid, __func__ );
 			goto err2;
 		}
 	
@@ -173,7 +176,7 @@
 
 		if (event->event != RDMA_CM_EVENT_ADDR_RESOLVED) {
 			fprintf(stderr, "%d:%s: unexpected CM event %d\n", 
-				pid, __func__, event->event);
+				(int)pid, __func__, event->event);
 			goto err1;
 		}
 		rdma_ack_cm_event(event);
@@ -189,7 +192,7 @@
 retry_route:
 		if (rdma_resolve_route(data->cm_id, 2000)) {
 			fprintf(stderr, "%d:%s: rdma_resolve_route failed\n", 
-						pid, __func__);
+						(int)pid, __func__);
 			goto err2;
 		}
 	
@@ -204,14 +207,14 @@
 
 		if (event->event != RDMA_CM_EVENT_ROUTE_RESOLVED) {
 			fprintf(stderr, "%d:%s: unexpected CM event %d\n", 
-					pid, __func__, event->event);
+					(int)pid, __func__, event->event);
 			rdma_ack_cm_event(event);
 			goto err1;
 		}
 		rdma_ack_cm_event(event);
 		ctx = pp_init_ctx(data->cm_id, data);
 		if (!ctx) {
-			fprintf(stderr, "%d:%s: pp_init_ctx failed\n", pid, __func__);
+			fprintf(stderr, "%d:%s: pp_init_ctx failed\n", (int)pid, __func__);
 			goto err2;
 		}
 		data->my_dest.psn = lrand48() & 0xffffff;
@@ -227,7 +230,7 @@
 		conn_param.private_data_len = sizeof(data->my_dest);
 
 		if (rdma_connect(data->cm_id, &conn_param)) {
-			fprintf(stderr, "%d:%s: rdma_connect failure\n", pid, __func__);
+			fprintf(stderr, "%d:%s: rdma_connect failure\n", (int)pid, __func__);
 			goto err2;
 		}
 	
@@ -236,13 +239,13 @@
 	
 		if (event->event != RDMA_CM_EVENT_ESTABLISHED) {
 			fprintf(stderr, "%d:%s: unexpected CM event %d\n", 
- 					pid, __func__, event->event);
+ 					(int)pid, __func__, event->event);
 			goto err1;
 		}
 		if (!event->param.conn.private_data || 
 		    (event->param.conn.private_data_len < sizeof(*data->rem_dest))) {
 			fprintf(stderr, "%d:%s: bad private data ptr %p len %d\n",  
-				pid, __func__, event->param.conn.private_data, 
+				(int)pid, __func__, event->param.conn.private_data, 
 				event->param.conn.private_data_len);
 			goto err1;
 		}
@@ -266,7 +269,7 @@
 		}
 		if (sockfd < 0) {
 			fprintf(stderr, "%d:%s: Couldn't connect to %s:%d\n", 
-				 pid, __func__, data->servername, data->port);
+				 (int)pid, __func__, data->servername, data->port);
 			goto err3;
 		}
 		ctx = pp_init_ctx(data->ib_dev, data);
@@ -296,20 +299,20 @@
 	int parsed;
 	
 	if (!data->use_cma) {
-		sprintf(msg, "%04x:%06x:%06x:%08x:%016Lx", data->my_dest.lid, 
+		sprintf(msg, "%04x:%06x:%06x:%08x:%016llx", data->my_dest.lid, 
 				data->my_dest.qpn, data->my_dest.psn,
 				data->my_dest.rkey, data->my_dest.vaddr);
 		if (write(data->sockfd, msg, sizeof msg) != sizeof msg) {
 			perror("client write");
 			fprintf(stderr, "%d:%s: Couldn't send local address\n", 
-					pid, __func__);
+					(int)pid, __func__);
 			goto err;
 		}
 	
 		if (read(data->sockfd, msg, sizeof msg) != sizeof msg) {
 			perror("client read");
 			fprintf(stderr, "%d:%s: Couldn't read remote address\n", 
-					pid, __func__);
+					(int)pid, __func__);
 			goto err;
 		}
 	
@@ -319,7 +322,7 @@
 		if (!data->rem_dest)
 			goto err;
 	
-		parsed = sscanf(msg, "%x:%x:%x:%x:%Lx", &data->rem_dest->lid,
+		parsed = sscanf(msg, "%x:%x:%x:%x:%llx", &data->rem_dest->lid,
 				&data->rem_dest->qpn, &data->rem_dest->psn,
 				&data->rem_dest->rkey, &data->rem_dest->vaddr);
 	
@@ -356,7 +359,7 @@
 		goto err5;
 
 	if ( (n = getaddrinfo(NULL, service, &hints, &res)) < 0 ) {
-		fprintf(stderr, "%d:%s: %s for port %d\n", pid, __func__, 
+		fprintf(stderr, "%d:%s: %s for port %d\n", (int)pid, __func__, 
 					gai_strerror(n), data->port);
 		goto err5;
 	}
@@ -366,12 +369,12 @@
 		sin.sin_family = AF_INET;
 		sin.sin_port = htons(data->port);
 		if (rdma_bind_addr(data->cm_id, (struct sockaddr *)&sin)) {
-			fprintf(stderr, "%d:%s: rdma_bind_addr failed\n", pid, __func__);
+			fprintf(stderr, "%d:%s: rdma_bind_addr failed\n", (int)pid, __func__);
 			goto err3;
 		}
 	
 		if (rdma_listen(data->cm_id, 0)) {
-			fprintf(stderr, "%d:%s: rdma_listen failed\n", pid, __func__);
+			fprintf(stderr, "%d:%s: rdma_listen failed\n", (int)pid, __func__);
 			goto err3;
 		}
 
@@ -384,13 +387,13 @@
 
 		if (event->event != RDMA_CM_EVENT_CONNECT_REQUEST) {
 			fprintf(stderr, "%d:%s: bad event waiting for connect request %d\n", 
-				pid, __func__, event->event);
+				(int)pid, __func__, event->event);
 			goto err2;
 		}
 	
 		if (!event->param.conn.private_data ||
 		    (event->param.conn.private_data_len < sizeof(*data->rem_dest))) {
-			fprintf(stderr, "%d:%s: bad private data len %d\n", pid,
+			fprintf(stderr, "%d:%s: bad private data len %d\n", (int)pid,
 				__func__, event->param.conn.private_data_len);
 			goto err2;
 		}
@@ -421,18 +424,18 @@
 		printf("asaa3\n");
 
 		if (rdma_accept(child_cm_id, &conn_param)) {
-			fprintf(stderr, "%d:%s: rdma_accept failed\n", pid, __func__);
+			fprintf(stderr, "%d:%s: rdma_accept failed\n", (int)pid, __func__);
 			goto err1;
 		}	
 		rdma_ack_cm_event(event);
 		if (rdma_get_cm_event(data->cm_channel, &event)) {
-			fprintf(stderr, "%d:%s: rdma_get_cm_event error\n", pid, __func__);
+			fprintf(stderr, "%d:%s: rdma_get_cm_event error\n", (int)pid, __func__);
 			rdma_destroy_id(child_cm_id);
 			goto err3;
 		}
 		if (event->event != RDMA_CM_EVENT_ESTABLISHED) {
 			fprintf(stderr, "%d:%s: bad event waiting for established %d\n", 
-				pid, __func__, event->event);
+				(int)pid, __func__, event->event);
 			goto err1;
 		}
 		rdma_ack_cm_event(event);	
@@ -452,7 +455,7 @@
 		}
 	
 		if (sockfd < 0) {
-			fprintf(stderr, "%d:%s: Couldn't listen to port %d\n", pid,
+			fprintf(stderr, "%d:%s: Couldn't listen to port %d\n", (int)pid,
 						__func__, data->port);
 			goto err4;
 		}
@@ -461,7 +464,7 @@
 		connfd = accept(sockfd, NULL, 0);
 		if (connfd < 0) {
 			perror("server accept");
-			fprintf(stderr, "%d:%s: accept() failed\n", pid, __func__);
+			fprintf(stderr, "%d:%s: accept() failed\n", (int)pid, __func__);
 			close(sockfd);
 			goto err4;
 		}
@@ -501,7 +504,7 @@
 		if (n != sizeof msg) {
 			perror("server read");
 			fprintf(stderr, "%d:%s: %d/%d Couldn't read remote address\n", 
-						pid, __func__, n, (int) sizeof msg);
+						(int)pid, __func__, n, (int) sizeof msg);
 			goto err;
 		}
 	
@@ -511,23 +514,23 @@
 		if (!data->rem_dest)
 			goto err;
 	
-		parsed = sscanf(msg, "%x:%x:%x:%x:%Lx", &data->rem_dest->lid,
+		parsed = sscanf(msg, "%x:%x:%x:%x:%llx", &data->rem_dest->lid,
 			      &data->rem_dest->qpn, &data->rem_dest->psn,
 			      &data->rem_dest->rkey, &data->rem_dest->vaddr);
 		if (parsed != 5) {
-			fprintf(stderr, "%d:%s: Couldn't parse line <%.*s>\n", pid,
+			fprintf(stderr, "%d:%s: Couldn't parse line <%.*s>\n", (int)pid,
 						 __func__, (int)sizeof msg, msg);
 			free(data->rem_dest);
 			goto err;
 		}
 	
-		sprintf(msg, "%04x:%06x:%06x:%08x:%016Lx", data->my_dest.lid,
+		sprintf(msg, "%04x:%06x:%06x:%08x:%016llx", data->my_dest.lid,
 					 data->my_dest.qpn, data->my_dest.psn,
 					 data->my_dest.rkey, data->my_dest.vaddr);
 		if (write(data->sockfd, msg, sizeof msg) != sizeof msg) {
 			perror("server write");
 			fprintf(stderr, "%d:%s: Couldn't send local address\n", 
-					pid, __func__);
+					(int)pid, __func__);
 			free(data->rem_dest);
 			goto err;
 		}
@@ -554,7 +557,7 @@
 	ctx->buf = memalign(page_size, ctx->size * 2);
 	if (!ctx->buf) {
 		fprintf(stderr, "%d:%s: Couldn't allocate work buf.\n",
-					 pid, __func__);
+					 (int)pid, __func__);
 		return NULL;
 	}
 
@@ -564,7 +567,7 @@
 		cm_id = (struct rdma_cm_id *)ptr;
 		ctx->context = cm_id->verbs;
 		if (!ctx->context) {
-			fprintf(stderr, "%d:%s: Unbound cm_id!!\n", pid, 
+			fprintf(stderr, "%d:%s: Unbound cm_id!!\n", (int)pid, 
 							__func__);
 			return NULL;
 		}
@@ -574,14 +577,14 @@
 		ctx->context = ibv_open_device(ib_dev);
 		if (!ctx->context) {
 			fprintf(stderr, "%d:%s: Couldn't get context for %s\n", 
-				pid, __func__, ibv_get_device_name(ib_dev));
+				(int)pid, __func__, ibv_get_device_name(ib_dev));
 			return NULL;
 		}
 	}
 
 	ctx->pd = ibv_alloc_pd(ctx->context);
 	if (!ctx->pd) {
-		fprintf(stderr, "%d:%s: Couldn't allocate PD\n", pid, __func__);
+		fprintf(stderr, "%d:%s: Couldn't allocate PD\n", (int)pid, __func__);
 		return NULL;
 	}
 
@@ -591,28 +594,28 @@
 	ctx->mr = ibv_reg_mr(ctx->pd, ctx->buf, ctx->size * 2,
 			     IBV_ACCESS_REMOTE_WRITE | IBV_ACCESS_LOCAL_WRITE);
 	if (!ctx->mr) {
-		fprintf(stderr, "%d:%s: Couldn't allocate MR\n", pid, __func__);
+		fprintf(stderr, "%d:%s: Couldn't allocate MR\n", (int)pid, __func__);
 		return NULL;
 	}
 
 
 	ctx->ch = ibv_create_comp_channel(ctx->context);
 	if (!ctx->ch) {
-		fprintf(stderr, "%d:%s: Couldn't create comp channel\n", pid,
+		fprintf(stderr, "%d:%s: Couldn't create comp channel\n", (int)pid,
 								 __func__);
 		return NULL;
 	}
 
 	ctx->rcq = ibv_create_cq(ctx->context, 1, NULL, NULL, 0);
 	if (!ctx->rcq) {
-		fprintf(stderr, "%d:%s: Couldn't create recv CQ\n", pid,
+		fprintf(stderr, "%d:%s: Couldn't create recv CQ\n", (int)pid,
 								 __func__);
 		return NULL;
 	}
 
 	ctx->scq = ibv_create_cq(ctx->context, ctx->tx_depth, ctx, ctx->ch, 0);
 	if (!ctx->scq) {
-		fprintf(stderr, "%d:%s: Couldn't create send CQ\n", pid,
+		fprintf(stderr, "%d:%s: Couldn't create send CQ\n", (int)pid,
 								 __func__);
 		return NULL;
 	}
@@ -635,7 +638,7 @@
 
 	if (data->use_cma) {
 		if (rdma_create_qp(cm_id, ctx->pd, &attr)) {
-			fprintf(stderr, "%d:%s: Couldn't create QP\n", pid, __func__);
+			fprintf(stderr, "%d:%s: Couldn't create QP\n", (int)pid, __func__);
 			return NULL;
 		}
 		ctx->qp = cm_id->qp;
@@ -644,7 +647,7 @@
 	} else {
 		ctx->qp = ibv_create_qp(ctx->pd, &attr);
 		if (!ctx->qp)  {
-			fprintf(stderr, "%d:%s: Couldn't create QP\n", pid, __func__);
+			fprintf(stderr, "%d:%s: Couldn't create QP\n", (int)pid, __func__);
 			return NULL;
 		}
 		{
@@ -661,7 +664,7 @@
 					IBV_QP_PORT               |
 					IBV_QP_ACCESS_FLAGS)) {
 				fprintf(stderr, "%d:%s: Failed to modify QP to INIT\n", 
-						pid, __func__);
+						(int)pid, __func__);
 				return NULL;
 			}
 		}
@@ -695,7 +698,7 @@
 			  IBV_QP_RQ_PSN             |
 			  IBV_QP_MAX_DEST_RD_ATOMIC |
 			  IBV_QP_MIN_RNR_TIMER)) {
-		fprintf(stderr, "%d:%s: Failed to modify QP to RTR\n", pid, __func__);
+		fprintf(stderr, "%d:%s: Failed to modify QP to RTR\n", (int)pid, __func__);
 		return 1;
 	}
 
@@ -712,7 +715,7 @@
 			  IBV_QP_RNR_RETRY          |
 			  IBV_QP_SQ_PSN             |
 			  IBV_QP_MAX_QP_RD_ATOMIC)) {
-		fprintf(stderr, "%d:%s: Failed to modify QP to RTS\n", pid, __func__);
+		fprintf(stderr, "%d:%s: Failed to modify QP to RTS\n", (int)pid, __func__);
 		return 1;
 	}
 
@@ -736,7 +739,7 @@
         rc = ibv_post_recv(ctx->qp, &wr, &bad_wr);
         if (rc) {
                 perror("ibv_post_recv");
-                fprintf(stderr, "%d:%s: ibv_post_recv failed %d\n", pid,
+                fprintf(stderr, "%d:%s: ibv_post_recv failed %d\n", (int)pid,
 				 __func__, rc);
         }
 }
@@ -752,13 +755,13 @@
 	} while (ne == 0);
 
 	if (wc.status) 
-		fprintf(stderr, "%d:%s: bad wc status %d\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc status %d\n", (int)pid, __func__,
 					 wc.status);
 	if (!(wc.opcode & IBV_WC_RECV))
-		fprintf(stderr, "%d:%s: bad wc opcode %d\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc opcode %d\n", (int)pid, __func__,
 					 wc.opcode);
 	if (wc.wr_id != 0xdeadbeef) 
-		fprintf(stderr, "%d:%s: bad wc wr_id 0x%x\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc wr_id 0x%x\n", (int)pid, __func__,
 					 (int)wc.wr_id);
 }
 
@@ -778,7 +781,7 @@
 	ctx->wr.send_flags = IBV_SEND_SIGNALED;
 	ctx->wr.next       = NULL;
 	if (ibv_post_send(ctx->qp, &ctx->wr, &bad_wr)) {
-		fprintf(stderr, "%d:%s: ibv_post_send failed\n", pid, __func__);
+		fprintf(stderr, "%d:%s: ibv_post_send failed\n", (int)pid, __func__);
 		return;
 	}
 	do {
@@ -787,13 +790,13 @@
 	} while (ne == 0);
 
 	if (wc.status) 
-		fprintf(stderr, "%d:%s: bad wc status %d\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc status %d\n", (int)pid, __func__,
 						wc.status);
 	if (wc.opcode != IBV_WC_SEND)
-		fprintf(stderr, "%d:%s: bad wc opcode %d\n", pid, __func__, 
+		fprintf(stderr, "%d:%s: bad wc opcode %d\n", (int)pid, __func__, 
 						wc.opcode);
 	if (wc.wr_id != 0xcafebabe) 
-		fprintf(stderr, "%d:%s: bad wc wr_id 0x%x\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc wr_id 0x%x\n", (int)pid, __func__,
 						(int)wc.wr_id);
 }
 
@@ -808,13 +811,13 @@
 	} while (ne == 0);
 
 	if (wc.status) 
-		fprintf(stderr, "%d:%s: bad wc status %d\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc status %d\n", (int)pid, __func__,
 					 wc.status);
 	if (!(wc.opcode & IBV_WC_RECV))
-		fprintf(stderr, "%d:%s: bad wc opcode %d\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc opcode %d\n", (int)pid, __func__,
 					 wc.opcode);
 	if (wc.wr_id != 0xdeadbeef) 
-		fprintf(stderr, "%d:%s: bad wc wr_id 0x%x\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc wr_id 0x%x\n", (int)pid, __func__,
 					 (int)wc.wr_id);
 	pp_post_recv(ctx);
 }
@@ -835,7 +838,7 @@
 	ctx->wr.send_flags = IBV_SEND_SIGNALED;
 	ctx->wr.next       = NULL;
 	if (ibv_post_send(ctx->qp, &ctx->wr, &bad_wr)) {
-		fprintf(stderr, "%d:%s: ibv_post_send failed\n", pid, __func__);
+		fprintf(stderr, "%d:%s: ibv_post_send failed\n", (int)pid, __func__);
 		return;
 	}
 	do {
@@ -844,13 +847,13 @@
 	} while (ne == 0);
 
 	if (wc.status) 
-		fprintf(stderr, "%d:%s: bad wc status %d\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc status %d\n", (int)pid, __func__,
 					 wc.status);
 	if (wc.opcode != IBV_WC_SEND)
-		fprintf(stderr, "%d:%s: bad wc opcode %d\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc opcode %d\n", (int)pid, __func__,
 					 wc.opcode);
 	if (wc.wr_id != 0xabbaabba) 
-		fprintf(stderr, "%d:%s: bad wc wr_id 0x%x\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc wr_id 0x%x\n", (int)pid, __func__,
 					 (int)wc.wr_id);
 }
 
@@ -863,7 +866,7 @@
                 rc = rdma_disconnect(data.cm_id);
                 if (rc) {
 			perror("rdma_disconnect");
-			fprintf(stderr, "%d:%s: rdma disconnect error\n", pid,
+			fprintf(stderr, "%d:%s: rdma disconnect error\n", (int)pid,
 								 __func__);
 			return;
                 }
@@ -872,7 +875,7 @@
         rdma_get_cm_event(data.cm_channel, &event);
         if (event->event != RDMA_CM_EVENT_DISCONNECTED)
                 fprintf(stderr, "%d:%s: unexpected event during disconnect %d\n", 
-			pid, __func__, event->event);
+			(int)pid, __func__, event->event);
         rdma_ack_cm_event(event);
         rdma_destroy_id(data.cm_id);
         rdma_destroy_event_channel(data.cm_channel);
@@ -926,17 +929,17 @@
 	tsize = duplex ? 2 : 1;
 	tsize = tsize * size;
 
-	printf("\n%d: Bandwidth peak (#%d to #%d): %g MB/sec\n", pid, 
+	printf("\n%d: Bandwidth peak (#%d to #%d): %g MB/sec\n", (int)pid, 
 			 opt_posted, opt_completed,
 			 tsize * cycles_to_units / opt_delta / 0x100000);
-	printf("%d: Bandwidth average: %g MB/sec\n", pid, 
+	printf("%d: Bandwidth average: %g MB/sec\n", (int)pid, 
 			 tsize * iters * cycles_to_units /
 			 (tcompleted[iters - 1] - tposted[0]) / 0x100000);
 
-	printf("%d: Service Demand peak (#%d to #%d): %ld cycles/KB\n", pid, 
+	printf("%d: Service Demand peak (#%d to #%d): %ld cycles/KB\n", (int)pid, 
 			 opt_posted, opt_completed,
 			 (unsigned long)opt_delta * 1024 / tsize);
-	printf("%d: Service Demand Avg  : %ld cycles/KB\n", pid, 
+	printf("%d: Service Demand Avg  : %ld cycles/KB\n", (int)pid, 
 			 (unsigned long)(tcompleted[iters - 1] - tposted[0]) *
 			 1024 / (tsize * iters));	
 }
@@ -1068,7 +1071,7 @@
 	pid = getpid();
 
 	printf("%d: | port=%d | ib_port=%d | size=%d | tx_depth=%d | sl=%d | iters=%d | duplex=%d | cma=%d |\n",
-		 pid, data.port, data.ib_port, data.size, data.tx_depth,
+		 (int)pid, data.port, data.ib_port, data.size, data.tx_depth,
 		 sl, iters, duplex, data.use_cma);
 		
 	/* Done with parameter parsing. Perform setup. */
@@ -1081,12 +1084,12 @@
 		data.cm_channel = rdma_create_event_channel();
 		if (!data.cm_channel) {
 			fprintf(stderr, "%d:%s: rdma_create_event_channel failed\n",
-							 pid, __func__);
+							 (int)pid, __func__);
 			return 1;
 		}
 		if (rdma_create_id(data.cm_channel, &data.cm_id, NULL, RDMA_PS_TCP)) {
 			fprintf(stderr, "%d:%s: rdma_create_id failed\n",
-							 pid, __func__);
+							 (int)pid, __func__);
 			return 1;
 		}
 	
@@ -1106,7 +1109,7 @@
 			data.ib_dev = dev_list[0];
 			if (!data.ib_dev) {
 				fprintf(stderr, "%d:%s: No IB devices found\n",
-							 pid, __func__);
+							 (int)pid, __func__);
 				return 1;
 			}
 		} else {
@@ -1115,7 +1118,7 @@
 					break;
 			if (!data.ib_dev) {
 				fprintf(stderr, "%d:%s: IB device %s not found\n",
-						 pid, __func__, ib_devname);
+						 (int)pid, __func__, ib_devname);
 				return 1;
 			}
 		}
@@ -1131,7 +1134,7 @@
 		data.my_dest.lid = pp_get_local_lid(ctx, data.ib_port);
 		if (!data.my_dest.lid) {
 			fprintf(stderr, "%d:%s: Local lid 0x0 detected. Is an SM running?\n",
-						pid, __func__);
+						(int)pid, __func__);
 			return 1;
 		}
 		data.my_dest.qpn = ctx->qp->qp_num;
@@ -1151,12 +1154,12 @@
 	}
 
 	printf("%d: Local address:  LID %#04x, QPN %#06x, PSN %#06x "
-			"RKey %#08x VAddr %#016Lx\n", pid, 
+			"RKey %#08x VAddr %#016llx\n", (int)pid, 
 			data.my_dest.lid, data.my_dest.qpn, data.my_dest.psn,
 			data.my_dest.rkey, data.my_dest.vaddr);	
 
 	printf("%d: Remote address: LID %#04x, QPN %#06x, PSN %#06x, "
-			"RKey %#08x VAddr %#016Lx\n\n", pid, 
+			"RKey %#08x VAddr %#016llx\n\n", (int)pid, 
 			data.rem_dest->lid, data.rem_dest->qpn, data.rem_dest->psn,
 			data.rem_dest->rkey, data.rem_dest->vaddr);
 
@@ -1241,7 +1244,7 @@
 
 			if (ibv_post_send(qp, &ctx->wr, &bad_wr)) {
 				fprintf(stderr, "%d:%s: Couldn't post send: scnt=%d\n",
-					pid, __func__, scnt);
+					(int)pid, __func__, scnt);
 				return 1;
 			}
 			++scnt;
@@ -1257,17 +1260,17 @@
 			tcompleted[ccnt] = get_cycles();
 
 			if (ne < 0) {
-				fprintf(stderr, "%d:%s: poll CQ failed %d\n", pid, 
+				fprintf(stderr, "%d:%s: poll CQ failed %d\n", (int)pid, 
 					__func__, ne);
 				return 1;
 			}
 			if (wc.status != IBV_WC_SUCCESS) {
 				fprintf(stderr, "%d:%s: Completion with error at %s:\n",
-					pid, __func__, data.servername ? "client" : "server");
+					(int)pid, __func__, data.servername ? "client" : "server");
 				fprintf(stderr, "%d:%s: Failed status %d: wr_id %d\n",
-					pid, __func__, wc.status, (int) wc.wr_id);
+					(int)pid, __func__, wc.status, (int) wc.wr_id);
 				fprintf(stderr, "%d:%s: scnt=%d, ccnt=%d\n",
-					pid, __func__, scnt, ccnt);
+					(int)pid, __func__, scnt, ccnt);
 				return 1;
 			}
 			ccnt += 1;
diff -r -u /tmp/perftest-1.3.0/rdma_lat.c perftest-1.3.0/rdma_lat.c
--- /tmp/perftest-1.3.0/rdma_lat.c	2011-10-26 20:44:26.000000000 +0900
+++ perftest-1.3.0/rdma_lat.c	2012-02-02 11:12:10.129679808 +0900
@@ -50,8 +50,11 @@
 #include <malloc.h>
 #include <getopt.h>
 #include <arpa/inet.h>
+#if !(defined(__SVR4) && defined(__sun))
 #include <byteswap.h>
+#endif
 #include <time.h>
+#include <inttypes.h>
 
 #include <infiniband/verbs.h>
 #include <rdma/rdma_cma.h>
@@ -59,7 +62,11 @@
 #include "get_clock.h"
 
 #define PINGPONG_RDMA_WRID	3
+#if defined(__SVR4) && defined(__sun)
+#define MAX_INLINE 372
+#else
 #define MAX_INLINE 400
+#endif
 
 static int inline_size = MAX_INLINE;
 static int sl = 0;
@@ -156,7 +163,8 @@
 }
 
 #define KEY_MSG_SIZE (sizeof "0000:000000:000000:00000000:0000000000000000")
-#define KEY_PRINT_FMT "%04x:%06x:%06x:%08x:%016Lx"
+#define KEY_PRINT_FMT "%04x:%06x:%06x:%08x:%016" "llx"
+#define KEY_SCAN_FMT "%04x:%06x:%06x:%08x:%016" "llx"
 
 static int pp_write_keys(int sockfd, const struct pingpong_dest *my_dest)
 {
@@ -186,7 +194,7 @@
 		return -1;
 	}
 
-	parsed = sscanf(msg, KEY_PRINT_FMT, &rem_dest->lid, &rem_dest->qpn,
+	parsed = sscanf(msg, KEY_SCAN_FMT, &rem_dest->lid, &rem_dest->qpn,
 			&rem_dest->psn, &rem_dest->rkey, &rem_dest->vaddr);
 
 	if (parsed != 5) {
@@ -221,7 +229,7 @@
 
 	if (n < 0) {
 		fprintf(stderr, "%d:%s: %s for %s:%d\n", 
-				pid, __func__, gai_strerror(n),
+				(int)pid, __func__, gai_strerror(n),
 				data->servername, data->port);
 		goto err4;
 	}
@@ -234,7 +242,7 @@
 		if (rdma_resolve_addr(data->cm_id, NULL,
 					 (struct sockaddr *)&sin, 2000)) {
 			fprintf(stderr, "%d:%s: rdma_resolve_addr failed\n",
-					 pid, __func__ );
+					 (int)pid, __func__ );
 			goto err2;
 		}
 	
@@ -249,7 +257,7 @@
 
 		if (event->event != RDMA_CM_EVENT_ADDR_RESOLVED) {
 			fprintf(stderr, "%d:%s: unexpected CM event %d\n", 
-				pid, __func__, event->event);
+				(int)pid, __func__, event->event);
 			goto err1;
 		}
 		rdma_ack_cm_event(event);
@@ -265,7 +273,7 @@
 retry_route:
 		if (rdma_resolve_route(data->cm_id, 2000)) {
 			fprintf(stderr, "%d:%s: rdma_resolve_route failed\n", 
-						pid, __func__);
+						(int)pid, __func__);
 			goto err2;
 		}
 	
@@ -280,14 +288,14 @@
 
 		if (event->event != RDMA_CM_EVENT_ROUTE_RESOLVED) {
 			fprintf(stderr, "%d:%s: unexpected CM event %d\n", 
-					pid, __func__, event->event);
+					(int)pid, __func__, event->event);
 			rdma_ack_cm_event(event);
 			goto err1;
 		}
 		rdma_ack_cm_event(event);
 		ctx = pp_init_ctx(data->cm_id, data);
 		if (!ctx) {
-			fprintf(stderr, "%d:%s: pp_init_ctx failed\n", pid, __func__);
+			fprintf(stderr, "%d:%s: pp_init_ctx failed\n", (int)pid, __func__);
 			goto err2;
 		}
 		data->my_dest.psn = lrand48() & 0xffffff;
@@ -303,7 +311,7 @@
 		conn_param.private_data_len = sizeof(data->my_dest);
 
 		if (rdma_connect(data->cm_id, &conn_param)) {
-			fprintf(stderr, "%d:%s: rdma_connect failure\n", pid, __func__);
+			fprintf(stderr, "%d:%s: rdma_connect failure\n", (int)pid, __func__);
 			goto err2;
 		}
 	
@@ -312,13 +320,13 @@
 	
 		if (event->event != RDMA_CM_EVENT_ESTABLISHED) {
 			fprintf(stderr, "%d:%s: unexpected CM event %d\n", 
- 					pid, __func__, event->event);
+ 					(int)pid, __func__, event->event);
 			goto err1;
 		}
 		if (!event->param.conn.private_data || 
 		    (event->param.conn.private_data_len < sizeof(*data->rem_dest))) {
 			fprintf(stderr, "%d:%s: bad private data ptr %p len %d\n",  
-				pid, __func__, event->param.conn.private_data, 
+				(int)pid, __func__, event->param.conn.private_data, 
 				event->param.conn.private_data_len);
 			goto err1;
 		}
@@ -341,7 +349,7 @@
 		}
 		if (sockfd < 0) {
 			fprintf(stderr, "%d:%s: Couldn't connect to %s:%d\n", 
-				 pid, __func__, data->servername, data->port);
+				 (int)pid, __func__, data->servername, data->port);
 			goto err3;
 		}
 		ctx = pp_init_ctx(data->ib_dev, data);
@@ -402,7 +410,7 @@
 		goto err5;
 
 	if ( (n = getaddrinfo(NULL, service, &hints, &res)) < 0 ) {
-		fprintf(stderr, "%d:%s: %s for port %d\n", pid, __func__, 
+		fprintf(stderr, "%d:%s: %s for port %d\n", (int)pid, __func__, 
 					gai_strerror(n), data->port);
 		goto err5;
 	}
@@ -412,12 +420,12 @@
 		sin.sin_family = AF_INET;
 		sin.sin_port = htons(data->port);
 		if (rdma_bind_addr(data->cm_id, (struct sockaddr *)&sin)) {
-			fprintf(stderr, "%d:%s: rdma_bind_addr failed\n", pid, __func__);
+			fprintf(stderr, "%d:%s: rdma_bind_addr failed\n", (int)pid, __func__);
 			goto err3;
 		}
 	
 		if (rdma_listen(data->cm_id, 0)) {
-			fprintf(stderr, "%d:%s: rdma_listen failed\n", pid, __func__);
+			fprintf(stderr, "%d:%s: rdma_listen failed\n", (int)pid, __func__);
 			goto err3;
 		}
 	
@@ -426,13 +434,13 @@
 
 		if (event->event != RDMA_CM_EVENT_CONNECT_REQUEST) {
 			fprintf(stderr, "%d:%s: bad event waiting for connect request %d\n", 
-				pid, __func__, event->event);
+				(int)pid, __func__, event->event);
 			goto err2;
 		}
 	
 		if (!event->param.conn.private_data ||
 		    (event->param.conn.private_data_len < sizeof(*data->rem_dest))) {
-			fprintf(stderr, "%d:%s: bad private data len %d\n", pid,
+			fprintf(stderr, "%d:%s: bad private data len %d\n", (int)pid,
 				__func__, event->param.conn.private_data_len);
 			goto err2;
 		}
@@ -460,18 +468,18 @@
 		conn_param.private_data = &data->my_dest;
 		conn_param.private_data_len = sizeof(data->my_dest);
 		if (rdma_accept(child_cm_id, &conn_param)) {
-			fprintf(stderr, "%d:%s: rdma_accept failed\n", pid, __func__);
+			fprintf(stderr, "%d:%s: rdma_accept failed\n", (int)pid, __func__);
 			goto err1;
 		}	
 		rdma_ack_cm_event(event);
 		if (rdma_get_cm_event(data->cm_channel, &event)) {
-			fprintf(stderr, "%d:%s: rdma_get_cm_event error\n", pid, __func__);
+			fprintf(stderr, "%d:%s: rdma_get_cm_event error\n", (int)pid, __func__);
 			rdma_destroy_id(child_cm_id);
 			goto err3;
 		}
 		if (event->event != RDMA_CM_EVENT_ESTABLISHED) {
 			fprintf(stderr, "%d:%s: bad event waiting for established %d\n", 
-				pid, __func__, event->event);
+				(int)pid, __func__, event->event);
 			goto err1;
 		}
 		rdma_ack_cm_event(event);	
@@ -491,7 +499,7 @@
 		}
 	
 		if (sockfd < 0) {
-			fprintf(stderr, "%d:%s: Couldn't listen to port %d\n", pid,
+			fprintf(stderr, "%d:%s: Couldn't listen to port %d\n", (int)pid,
 						__func__, data->port);
 			goto err4;
 		}
@@ -500,7 +508,7 @@
 		connfd = accept(sockfd, NULL, 0);
 		if (connfd < 0) {
 			perror("server accept");
-			fprintf(stderr, "%d:%s: accept() failed\n", pid, __func__);
+			fprintf(stderr, "%d:%s: accept() failed\n", (int)pid, __func__);
 			close(sockfd);
 			goto err4;
 		}
@@ -560,7 +568,7 @@
 	ctx->buf = memalign(page_size, ctx->size * 2);
 	if (!ctx->buf) {
 		fprintf(stderr, "%d:%s: Couldn't allocate work buf.\n",
-					 pid, __func__);
+					 (int)pid, __func__);
 		return NULL;
 	}
 
@@ -574,7 +582,7 @@
 		cm_id = (struct rdma_cm_id *)ptr;
 		ctx->context = cm_id->verbs;
 		if (!ctx->context) {
-			fprintf(stderr, "%d:%s: Unbound cm_id!!\n", pid, 
+			fprintf(stderr, "%d:%s: Unbound cm_id!!\n", (int)pid, 
 							__func__);
 			return NULL;
 		}
@@ -584,14 +592,14 @@
 		ctx->context = ibv_open_device(ib_dev);
 		if (!ctx->context) {
 			fprintf(stderr, "%d:%s: Couldn't get context for %s\n", 
-				pid, __func__, ibv_get_device_name(ib_dev));
+				(int)pid, __func__, ibv_get_device_name(ib_dev));
 			return NULL;
 		}
 	}
 
 	ctx->pd = ibv_alloc_pd(ctx->context);
 	if (!ctx->pd) {
-		fprintf(stderr, "%d:%s: Couldn't allocate PD\n", pid, __func__);
+		fprintf(stderr, "%d:%s: Couldn't allocate PD\n", (int)pid, __func__);
 		return NULL;
 	}
 
@@ -601,20 +609,20 @@
 	ctx->mr = ibv_reg_mr(ctx->pd, ctx->buf, ctx->size * 2,
 			     IBV_ACCESS_REMOTE_WRITE | IBV_ACCESS_LOCAL_WRITE);
 	if (!ctx->mr) {
-		fprintf(stderr, "%d:%s: Couldn't allocate MR\n", pid, __func__);
+		fprintf(stderr, "%d:%s: Couldn't allocate MR\n", (int)pid, __func__);
 		return NULL;
 	}
 
 	ctx->rcq = ibv_create_cq(ctx->context, 1, NULL, NULL, 0);
 	if (!ctx->rcq) {
-		fprintf(stderr, "%d:%s: Couldn't create recv CQ\n", pid,
+		fprintf(stderr, "%d:%s: Couldn't create recv CQ\n", (int)pid,
 								 __func__);
 		return NULL;
 	}
 
 	ctx->scq = ibv_create_cq(ctx->context, ctx->tx_depth, ctx, NULL, 0);
 	if (!ctx->scq) {
-		fprintf(stderr, "%d:%s: Couldn't create send CQ\n", pid,
+		fprintf(stderr, "%d:%s: Couldn't create send CQ\n", (int)pid,
 								 __func__);
 		return NULL;
 	}
@@ -637,7 +645,7 @@
 
 	if (data->use_cma) {
 		if (rdma_create_qp(cm_id, ctx->pd, &attr)) {
-			fprintf(stderr, "%d:%s: Couldn't create QP\n", pid, __func__);
+			fprintf(stderr, "%d:%s: Couldn't create QP\n", (int)pid, __func__);
 			return NULL;
 		}
 		ctx->qp = cm_id->qp;
@@ -645,7 +653,7 @@
 	} else {
 		ctx->qp = ibv_create_qp(ctx->pd, &attr);
 		if (!ctx->qp)  {
-			fprintf(stderr, "%d:%s: Couldn't create QP\n", pid, __func__);
+			fprintf(stderr, "%d:%s: Couldn't create QP\n", (int)pid, __func__);
 			return NULL;
 		}
 		{
@@ -662,7 +670,7 @@
 					IBV_QP_PORT               |
 					IBV_QP_ACCESS_FLAGS)) {
 				fprintf(stderr, "%d:%s: Failed to modify QP to INIT\n", 
-						pid, __func__);
+						(int)pid, __func__);
 				return NULL;
 			}
 		}
@@ -719,10 +727,10 @@
 	return 0;
 }
 
+#define ADDR_FMT "%8s address: LID %#04x QPN %#06x PSN %#06x RKey %#08x VAddr %#016" "llx" "\n"
+
 static int pp_open_port(struct pingpong_context *ctx, struct pp_data *data )
 {
-	char addr_fmt[] = "%8s address: LID %#04x QPN %#06x PSN %#06x RKey %#08x VAddr %#016Lx\n";
-
 	/* Create connection between client and server.
 	 * We do it by exchanging data over a TCP socket connection. */
 
@@ -736,7 +744,7 @@
 	data->my_dest.rkey = ctx->mr->rkey;
 	data->my_dest.vaddr = (uintptr_t)ctx->buf + ctx->size;
 
-	printf(addr_fmt, "local", data->my_dest.lid, data->my_dest.qpn, data->my_dest.psn,
+	printf(ADDR_FMT, "local", data->my_dest.lid, data->my_dest.qpn, data->my_dest.psn,
 			data->my_dest.rkey, data->my_dest.vaddr);
 
 	if (data->servername) {
@@ -747,7 +755,7 @@
 			return 1;
 	}
 
-	printf(addr_fmt, "remote", data->rem_dest->lid, data->rem_dest->qpn,
+	printf(ADDR_FMT, "remote", data->rem_dest->lid, data->rem_dest->qpn,
 			data->rem_dest->psn, data->rem_dest->rkey, 
 			data->rem_dest->vaddr);
 
@@ -792,7 +800,7 @@
         rc = ibv_post_recv(ctx->qp, &wr, &bad_wr);
         if (rc) {
                 perror("ibv_post_recv");
-                fprintf(stderr, "%d:%s: ibv_post_recv failed %d\n", pid,
+                fprintf(stderr, "%d:%s: ibv_post_recv failed %d\n", (int)pid,
 				 __func__, rc);
         }
 }
@@ -808,13 +816,13 @@
 	} while (ne == 0);
 
 	if (wc.status) 
-		fprintf(stderr, "%d:%s: bad wc status %d\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc status %d\n", (int)pid, __func__,
 					 wc.status);
 	if (!(wc.opcode & IBV_WC_RECV))
-		fprintf(stderr, "%d:%s: bad wc opcode %d\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc opcode %d\n", (int)pid, __func__,
 					 wc.opcode);
 	if (wc.wr_id != 0xdeadbeef) 
-		fprintf(stderr, "%d:%s: bad wc wr_id 0x%x\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc wr_id 0x%x\n", (int)pid, __func__,
 					 (int)wc.wr_id);
 }
 
@@ -834,7 +842,7 @@
 	ctx->wr.send_flags = IBV_SEND_SIGNALED;
 	ctx->wr.next       = NULL;
 	if (ibv_post_send(ctx->qp, &ctx->wr, &bad_wr)) {
-		fprintf(stderr, "%d:%s: ibv_post_send failed\n", pid, __func__);
+		fprintf(stderr, "%d:%s: ibv_post_send failed\n", (int)pid, __func__);
 		return;
 	}
 	do {
@@ -843,13 +851,13 @@
 	} while (ne == 0);
 
 	if (wc.status) 
-		fprintf(stderr, "%d:%s: bad wc status %d\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc status %d\n", (int)pid, __func__,
 						wc.status);
 	if (wc.opcode != IBV_WC_SEND)
-		fprintf(stderr, "%d:%s: bad wc opcode %d\n", pid, __func__, 
+		fprintf(stderr, "%d:%s: bad wc opcode %d\n", (int)pid, __func__, 
 						wc.opcode);
 	if (wc.wr_id != 0xcafebabe) 
-		fprintf(stderr, "%d:%s: bad wc wr_id 0x%x\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc wr_id 0x%x\n", (int)pid, __func__,
 						(int)wc.wr_id);
 }
 
@@ -864,13 +872,13 @@
 	} while (ne == 0);
 
 	if (wc.status) 
-		fprintf(stderr, "%d:%s: bad wc status %d\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc status %d\n", (int)pid, __func__,
 					 wc.status);
 	if (!(wc.opcode & IBV_WC_RECV))
-		fprintf(stderr, "%d:%s: bad wc opcode %d\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc opcode %d\n", (int)pid, __func__,
 					 wc.opcode);
 	if (wc.wr_id != 0xdeadbeef) 
-		fprintf(stderr, "%d:%s: bad wc wr_id 0x%x\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc wr_id 0x%x\n", (int)pid, __func__,
 					 (int)wc.wr_id);
 	pp_post_recv(ctx);
 }
@@ -891,7 +899,7 @@
 	ctx->wr.send_flags = IBV_SEND_SIGNALED;
 	ctx->wr.next       = NULL;
 	if (ibv_post_send(ctx->qp, &ctx->wr, &bad_wr)) {
-		fprintf(stderr, "%d:%s: ibv_post_send failed\n", pid, __func__);
+		fprintf(stderr, "%d:%s: ibv_post_send failed\n", (int)pid, __func__);
 		return;
 	}
 	do {
@@ -900,13 +908,13 @@
 	} while (ne == 0);
 
 	if (wc.status) 
-		fprintf(stderr, "%d:%s: bad wc status %d\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc status %d\n", (int)pid, __func__,
 					 wc.status);
 	if (wc.opcode != IBV_WC_SEND)
-		fprintf(stderr, "%d:%s: bad wc opcode %d\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc opcode %d\n", (int)pid, __func__,
 					 wc.opcode);
 	if (wc.wr_id != 0xabbaabba) 
-		fprintf(stderr, "%d:%s: bad wc wr_id 0x%x\n", pid, __func__,
+		fprintf(stderr, "%d:%s: bad wc wr_id 0x%x\n", (int)pid, __func__,
 					 (int)wc.wr_id);
 }
 
@@ -919,7 +927,7 @@
                 rc = rdma_disconnect(data.cm_id);
                 if (rc) {
 			perror("rdma_disconnect");
-			fprintf(stderr, "%d:%s: rdma disconnect error\n", pid,
+			fprintf(stderr, "%d:%s: rdma disconnect error\n", (int)pid,
 								 __func__);
 			return;
                 }
@@ -928,7 +936,7 @@
         rdma_get_cm_event(data.cm_channel, &event);
         if (event->event != RDMA_CM_EVENT_DISCONNECTED)
                 fprintf(stderr, "%d:%s: unexpected event during disconnect %d\n", 
-			pid, __func__, event->event);
+			(int)pid, __func__, event->event);
         rdma_ack_cm_event(event);
         rdma_destroy_id(data.cm_id);
         rdma_destroy_event_channel(data.cm_channel);
@@ -1179,12 +1187,12 @@
 		data.cm_channel = rdma_create_event_channel();
 		if (!data.cm_channel) {
 			fprintf(stderr, "%d:%s: rdma_create_event_channel failed\n",
-							 pid, __func__);
+							 (int)pid, __func__);
 			return 1;
 		}
 		if (rdma_create_id(data.cm_channel, &data.cm_id, NULL, RDMA_PS_TCP)) {
 			fprintf(stderr, "%d:%s: rdma_create_id failed\n",
-							 pid, __func__);
+							 (int)pid, __func__);
 			return 1;
 		}
 	
@@ -1199,12 +1207,12 @@
 		}
 
 		printf("%d: Local address:  LID %#04x, QPN %#06x, PSN %#06x "
-                        "RKey %#08x VAddr %#016Lx\n", pid,
+                        "RKey %#08x VAddr %#016llx\n", (int)pid,
                         data.my_dest.lid, data.my_dest.qpn, data.my_dest.psn,
                         data.my_dest.rkey, data.my_dest.vaddr);
 
         	printf("%d: Remote address: LID %#04x, QPN %#06x, PSN %#06x, "
-                        "RKey %#08x VAddr %#016Lx\n\n", pid,
+                        "RKey %#08x VAddr %#016llx\n\n", (int)pid,
                         data.rem_dest->lid, data.rem_dest->qpn, data.rem_dest->psn,
                         data.rem_dest->rkey, data.rem_dest->vaddr);
 
